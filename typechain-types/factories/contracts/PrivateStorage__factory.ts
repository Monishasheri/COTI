/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PrivateStorage,
  PrivateStorageInterface,
} from "../../contracts/PrivateStorage";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct itUint64",
        name: "value1",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct itUint64",
        name: "value2",
        type: "tuple",
      },
    ],
    name: "add",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "addResult",
    outputs: [
      {
        internalType: "ctUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ctOutputB",
    outputs: [
      {
        internalType: "ctUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "privateNumber",
    outputs: [
      {
        internalType: "ctUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserve1",
    outputs: [
      {
        internalType: "ctUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserve2",
    outputs: [
      {
        internalType: "ctUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct itUint64",
        name: "value",
        type: "tuple",
      },
    ],
    name: "setPrivateNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct itUint64",
        name: "inputA",
        type: "tuple",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506000620000276103e86200007660201b60201c565b905060006200003e6103e86200007660201b60201c565b905062000051826200012560201b60201c565b60028190555062000068816200012560201b60201c565b6003819055505050620002e6565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b60600480811115620000ab57620000aa620001ca565b5b60f81b8467ffffffffffffffff166040518363ffffffff1660e01b8152600401620000d892919062000251565b6020604051808303816000875af1158015620000f8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200011e9190620002b4565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663c50c9c026004808111156200015a5762000159620001ca565b5b60f81b846040518363ffffffff1660e01b81526004016200017d92919062000251565b6020604051808303816000875af11580156200019d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c39190620002b4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6200023081620001f9565b82525050565b6000819050919050565b6200024b8162000236565b82525050565b600060408201905062000268600083018562000225565b62000277602083018462000240565b9392505050565b600080fd5b6200028e8162000236565b81146200029a57600080fd5b50565b600081519050620002ae8162000283565b92915050565b600060208284031215620002cd57620002cc6200027e565b5b6000620002dd848285016200029d565b91505092915050565b610e5a80620002f66000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806366f41dff1161005b57806366f41dff1461010357806371af02a41461011f578063b486c5351461013d578063e46e2d091461015b57610088565b80631ecefa141461008d578063533a88b3146100a95780635a76f25e146100c75780635c0b9a2b146100e5575b600080fd5b6100a760048036038101906100a29190610849565b610177565b005b6100b161021b565b6040516100be91906108d7565b60405180910390f35b6100cf610221565b6040516100dc91906108d7565b60405180910390f35b6100ed610227565b6040516100fa91906108d7565b60405180910390f35b61011d60048036038101906101189190610849565b61022d565b005b610127610257565b60405161013491906108d7565b60405180910390f35b61014561025d565b60405161015291906108d7565b60405180910390f35b610175600480360381019061017091906108f2565b610263565b005b600061018b8261018690610b52565b6102b4565b9050600061019a60025461035b565b905060006101a960035461035b565b905060006101b783856103f8565b905060006101c5848461048f565b905060006101d38284610526565b905060006101e185836105bd565b90506101ec84610654565b6002819055506101fb82610654565b60038190555061020b81336106f1565b6004819055505050505050505050565b60015481565b60025481565b60035481565b60006102418261023c90610b52565b6102b4565b905061024d81336106f1565b6000819055505050565b60045481565b60005481565b60006102778361027290610b52565b6102b4565b9050600061028d8361028890610b52565b6102b4565b9050600061029b83836103f8565b90506102a781336106f1565b6001819055505050505050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663e4f36e106004808111156102e6576102e5610b65565b5b60f81b846000015185602001516040518463ffffffff1660e01b815260040161031193929190610c5d565b6020604051808303816000875af1158015610330573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103549190610cc7565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d2c135e560048081111561038d5761038c610b65565b5b60f81b846040518363ffffffff1660e01b81526004016103ae929190610cf4565b6020604051808303816000875af11580156103cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f19190610cc7565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff16638c5d015061042460048060006107b0565b85856040518463ffffffff1660e01b815260040161044493929190610d58565b6020604051808303816000875af1158015610463573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104879190610cc7565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663f1d21bb46104bb60048060006107b0565b85856040518463ffffffff1660e01b81526004016104db93929190610d58565b6020604051808303816000875af11580156104fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051e9190610cc7565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff16634e9ba4b561055260048060006107b0565b85856040518463ffffffff1660e01b815260040161057293929190610d58565b6020604051808303816000875af1158015610591573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b59190610cc7565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663371d1bf26105e960048060006107b0565b85856040518463ffffffff1660e01b815260040161060993929190610d58565b6020604051808303816000875af1158015610628573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064c9190610cc7565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663c50c9c0260048081111561068657610685610b65565b5b60f81b846040518363ffffffff1660e01b81526004016106a7929190610cf4565b6020604051808303816000875af11580156106c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ea9190610cc7565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff16633c6f0e6860048081111561072357610722610b65565b5b60f81b85856040516020016107389190610e09565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161076593929190610c5d565b6020604051808303816000875af1158015610784573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a89190610cc7565b905092915050565b60008160028111156107c5576107c4610b65565b5b60ff1660088460048111156107dd576107dc610b65565b5b61ffff16901b61ffff1660108660048111156107fc576107fb610b65565b5b62ffffff16901b171760e81b90509392505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000604082840312156108405761083f610825565b5b81905092915050565b60006020828403121561085f5761085e61081b565b5b600082013567ffffffffffffffff81111561087d5761087c610820565b5b6108898482850161082a565b91505092915050565b6000819050919050565b6000819050919050565b60006108c16108bc6108b784610892565b61089c565b610892565b9050919050565b6108d1816108a6565b82525050565b60006020820190506108ec60008301846108c8565b92915050565b600080604083850312156109095761090861081b565b5b600083013567ffffffffffffffff81111561092757610926610820565b5b6109338582860161082a565b925050602083013567ffffffffffffffff81111561095457610953610820565b5b6109608582860161082a565b9150509250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6109b88261096f565b810181811067ffffffffffffffff821117156109d7576109d6610980565b5b80604052505050565b60006109ea610811565b90506109f682826109af565b919050565b600080fd5b610a0981610892565b8114610a1457600080fd5b50565b600081359050610a2681610a00565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff821115610a5157610a50610980565b5b610a5a8261096f565b9050602081019050919050565b82818337600083830152505050565b6000610a89610a8484610a36565b6109e0565b905082815260208101848484011115610aa557610aa4610a31565b5b610ab0848285610a67565b509392505050565b600082601f830112610acd57610acc610a2c565b5b8135610add848260208601610a76565b91505092915050565b600060408284031215610afc57610afb61096a565b5b610b0660406109e0565b90506000610b1684828501610a17565b600083015250602082013567ffffffffffffffff811115610b3a57610b396109fb565b5b610b4684828501610ab8565b60208301525092915050565b6000610b5e3683610ae6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b610bc981610b94565b82525050565b610bd881610892565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c18578082015181840152602081019050610bfd565b60008484015250505050565b6000610c2f82610bde565b610c398185610be9565b9350610c49818560208601610bfa565b610c528161096f565b840191505092915050565b6000606082019050610c726000830186610bc0565b610c7f6020830185610bcf565b8181036040830152610c918184610c24565b9050949350505050565b610ca481610892565b8114610caf57600080fd5b50565b600081519050610cc181610c9b565b92915050565b600060208284031215610cdd57610cdc61081b565b5b6000610ceb84828501610cb2565b91505092915050565b6000604082019050610d096000830185610bc0565b610d166020830184610bcf565b9392505050565b60007fffffff000000000000000000000000000000000000000000000000000000000082169050919050565b610d5281610d1d565b82525050565b6000606082019050610d6d6000830186610d49565b610d7a6020830185610bcf565b610d876040830184610bcf565b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610dba82610d8f565b9050919050565b60008160601b9050919050565b6000610dd982610dc1565b9050919050565b6000610deb82610dce565b9050919050565b610e03610dfe82610daf565b610de0565b82525050565b6000610e158284610df2565b6014820191508190509291505056fea26469706673582212200fa5500c5b75bb471de7cbb8a4fc7b53d437491933f704e99965444be13f2ac264736f6c63430008130033";

type PrivateStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateStorage__factory extends ContractFactory {
  constructor(...args: PrivateStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PrivateStorage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PrivateStorage__factory {
    return super.connect(runner) as PrivateStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateStorageInterface {
    return new Interface(_abi) as PrivateStorageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PrivateStorage {
    return new Contract(address, _abi, runner) as unknown as PrivateStorage;
  }
}
