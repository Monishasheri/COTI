/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PrivateSwap,
  PrivateSwapInterface,
} from "../../../contracts/swapToken.sol/PrivateSwap";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenB",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct itUint64",
        name: "amountA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct itUint64",
        name: "amountB",
        type: "tuple",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ctOutputB",
    outputs: [
      {
        internalType: "ctUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUserReserves",
    outputs: [
      {
        internalType: "ctUint64",
        name: "",
        type: "uint256",
      },
      {
        internalType: "ctUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reserve1",
    outputs: [
      {
        internalType: "ctUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserve2",
    outputs: [
      {
        internalType: "ctUint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "ctUint64",
            name: "ciphertext",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct itUint64",
        name: "inputA",
        type: "tuple",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenA",
    outputs: [
      {
        internalType: "contract IPrivateERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenB",
    outputs: [
      {
        internalType: "contract IPrivateERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001bc438038062001bc48339818101604052810190620000379190620002c3565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000620000cc60006200010560201b60201c565b9050620000df81620001b460201b60201c565b600381905550620000f681620001b460201b60201c565b60048190555050505062000421565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b606004808111156200013a57620001396200030a565b5b60f81b8467ffffffffffffffff166040518363ffffffff1660e01b81526004016200016792919062000391565b6020604051808303816000875af115801562000187573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001ad9190620003ef565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663c50c9c02600480811115620001e957620001e86200030a565b5b60f81b846040518363ffffffff1660e01b81526004016200020c92919062000391565b6020604051808303816000875af11580156200022c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002529190620003ef565b9050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200028b826200025e565b9050919050565b6200029d816200027e565b8114620002a957600080fd5b50565b600081519050620002bd8162000292565b92915050565b60008060408385031215620002dd57620002dc62000259565b5b6000620002ed85828601620002ac565b92505060206200030085828601620002ac565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b620003708162000339565b82525050565b6000819050919050565b6200038b8162000376565b82525050565b6000604082019050620003a8600083018562000365565b620003b7602083018462000380565b9392505050565b620003c98162000376565b8114620003d557600080fd5b50565b600081519050620003e981620003be565b92915050565b60006020828403121562000408576200040762000259565b5b60006200041884828501620003d8565b91505092915050565b61179380620004316000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80635c0b9a2b1161005b5780635c0b9a2b146101015780635f64b55b1461011f57806371af02a41461013d578063d099c05a1461015b57610088565b80630fc63d101461008d5780631ecefa14146100ab5780635440d543146100c75780635a76f25e146100e3575b600080fd5b61009561017a565b6040516100a29190610def565b60405180910390f35b6100c560048036038101906100c09190610e42565b61019e565b005b6100e160048036038101906100dc9190610e8b565b610437565b005b6100eb61078a565b6040516100f89190610f3e565b60405180910390f35b610109610790565b6040516101169190610f3e565b60405180910390f35b610127610796565b6040516101349190610def565b60405180910390f35b6101456107bc565b6040516101529190610f3e565b60405180910390f35b6101636107c2565b604051610171929190610f59565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006101b2826101ad9061116a565b610809565b9050600080600354036101d0576101c960006108b0565b90506101de565b6101db600354610957565b90505b600080600454036101fa576101f360006108b0565b9050610208565b610205600454610957565b90505b600061021483856109f4565b905060006102228484610a8b565b905060006102308284610b22565b9050600061023e8583610bb9565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33308b6040518463ffffffff1660e01b81526004016102a0939291906111ad565b6020604051808303816000875af11580156102bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e39190611210565b905060008190506000810361032d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610324906112c0565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b815260040161038c9291906112e0565b6020604051808303816000875af11580156103ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cf9190611210565b9050600081905060008103610419576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104109061137b565b60405180910390fd5b6104238533610c50565b600281905550505050505050505050505050565b600061044b836104469061116a565b610809565b905060006104618361045c9061116a565b610809565b905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016104c3939291906111ad565b6020604051808303816000875af11580156104e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105069190611210565b9050600081905060008103610550576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610547906113e7565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b81526004016105b1939291906111ad565b6020604051808303816000875af11580156105d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f49190611210565b905060008190506000810361063e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063590611453565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106979190611473565b602060405180830381865afa1580156106b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d891906114a3565b600381905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016107399190611473565b602060405180830381865afa158015610756573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077a91906114a3565b6004819055505050505050505050565b60035481565b60045481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b60008060006107d2600354610957565b905060006107e1600454610957565b90506107ed8233610c50565b6003819055506107fd8133610c50565b60048190555050509091565b6000606473ffffffffffffffffffffffffffffffffffffffff1663e4f36e1060048081111561083b5761083a6114d0565b5b60f81b846000015185602001516040518463ffffffff1660e01b8152600401610866939291906115c8565b6020604051808303816000875af1158015610885573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a99190611632565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d9b60b606004808111156108e2576108e16114d0565b5b60f81b8467ffffffffffffffff166040518363ffffffff1660e01b815260040161090d92919061165f565b6020604051808303816000875af115801561092c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109509190611632565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663d2c135e5600480811115610989576109886114d0565b5b60f81b846040518363ffffffff1660e01b81526004016109aa92919061165f565b6020604051808303816000875af11580156109c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ed9190611632565b9050919050565b6000606473ffffffffffffffffffffffffffffffffffffffff16638c5d0150610a206004806000610d0f565b85856040518463ffffffff1660e01b8152600401610a40939291906116c3565b6020604051808303816000875af1158015610a5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a839190611632565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663f1d21bb4610ab76004806000610d0f565b85856040518463ffffffff1660e01b8152600401610ad7939291906116c3565b6020604051808303816000875af1158015610af6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1a9190611632565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff16634e9ba4b5610b4e6004806000610d0f565b85856040518463ffffffff1660e01b8152600401610b6e939291906116c3565b6020604051808303816000875af1158015610b8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb19190611632565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff1663371d1bf2610be56004806000610d0f565b85856040518463ffffffff1660e01b8152600401610c05939291906116c3565b6020604051808303816000875af1158015610c24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c489190611632565b905092915050565b6000606473ffffffffffffffffffffffffffffffffffffffff16633c6f0e68600480811115610c8257610c816114d0565b5b60f81b8585604051602001610c979190611742565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401610cc4939291906115c8565b6020604051808303816000875af1158015610ce3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d079190611632565b905092915050565b6000816002811115610d2457610d236114d0565b5b60ff166008846004811115610d3c57610d3b6114d0565b5b61ffff16901b61ffff166010866004811115610d5b57610d5a6114d0565b5b62ffffff16901b171760e81b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610db5610db0610dab84610d70565b610d90565b610d70565b9050919050565b6000610dc782610d9a565b9050919050565b6000610dd982610dbc565b9050919050565b610de981610dce565b82525050565b6000602082019050610e046000830184610de0565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600060408284031215610e3957610e38610e1e565b5b81905092915050565b600060208284031215610e5857610e57610e14565b5b600082013567ffffffffffffffff811115610e7657610e75610e19565b5b610e8284828501610e23565b91505092915050565b60008060408385031215610ea257610ea1610e14565b5b600083013567ffffffffffffffff811115610ec057610ebf610e19565b5b610ecc85828601610e23565b925050602083013567ffffffffffffffff811115610eed57610eec610e19565b5b610ef985828601610e23565b9150509250929050565b6000819050919050565b6000610f28610f23610f1e84610f03565b610d90565b610f03565b9050919050565b610f3881610f0d565b82525050565b6000602082019050610f536000830184610f2f565b92915050565b6000604082019050610f6e6000830185610f2f565b610f7b6020830184610f2f565b9392505050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610fd082610f87565b810181811067ffffffffffffffff82111715610fef57610fee610f98565b5b80604052505050565b6000611002610e0a565b905061100e8282610fc7565b919050565b600080fd5b61102181610f03565b811461102c57600080fd5b50565b60008135905061103e81611018565b92915050565b600080fd5b600080fd5b600067ffffffffffffffff82111561106957611068610f98565b5b61107282610f87565b9050602081019050919050565b82818337600083830152505050565b60006110a161109c8461104e565b610ff8565b9050828152602081018484840111156110bd576110bc611049565b5b6110c884828561107f565b509392505050565b600082601f8301126110e5576110e4611044565b5b81356110f584826020860161108e565b91505092915050565b60006040828403121561111457611113610f82565b5b61111e6040610ff8565b9050600061112e8482850161102f565b600083015250602082013567ffffffffffffffff81111561115257611151611013565b5b61115e848285016110d0565b60208301525092915050565b600061117636836110fe565b9050919050565b600061118882610d70565b9050919050565b6111988161117d565b82525050565b6111a781610f0d565b82525050565b60006060820190506111c2600083018661118f565b6111cf602083018561118f565b6111dc604083018461119e565b949350505050565b6111ed81610f03565b81146111f857600080fd5b50565b60008151905061120a816111e4565b92915050565b60006020828403121561122657611225610e14565b5b6000611234848285016111fb565b91505092915050565b600082825260208201905092915050565b7f546f6b656e20412066726f6d207573657220746f20636f6e747261637420747260008201527f616e73666572206661696c656400000000000000000000000000000000000000602082015250565b60006112aa602d8361123d565b91506112b58261124e565b604082019050919050565b600060208201905081810360008301526112d98161129d565b9050919050565b60006040820190506112f5600083018561118f565b611302602083018461119e565b9392505050565b7f546f6b656e20422066726f6d20636f6e747261637420746f207573657220747260008201527f616e73666572206661696c656400000000000000000000000000000000000000602082015250565b6000611365602d8361123d565b915061137082611309565b604082019050919050565b6000602082019050818103600083015261139481611358565b9050919050565b7f546f6b656e2041207472616e73666572206661696c6564000000000000000000600082015250565b60006113d160178361123d565b91506113dc8261139b565b602082019050919050565b60006020820190508181036000830152611400816113c4565b9050919050565b7f546f6b656e2042207472616e73666572206661696c6564000000000000000000600082015250565b600061143d60178361123d565b915061144882611407565b602082019050919050565b6000602082019050818103600083015261146c81611430565b9050919050565b6000602082019050611488600083018461118f565b92915050565b60008151905061149d81611018565b92915050565b6000602082840312156114b9576114b8610e14565b5b60006114c78482850161148e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b611534816114ff565b82525050565b61154381610f03565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611583578082015181840152602081019050611568565b60008484015250505050565b600061159a82611549565b6115a48185611554565b93506115b4818560208601611565565b6115bd81610f87565b840191505092915050565b60006060820190506115dd600083018661152b565b6115ea602083018561153a565b81810360408301526115fc818461158f565b9050949350505050565b61160f81610f03565b811461161a57600080fd5b50565b60008151905061162c81611606565b92915050565b60006020828403121561164857611647610e14565b5b60006116568482850161161d565b91505092915050565b6000604082019050611674600083018561152b565b611681602083018461153a565b9392505050565b60007fffffff000000000000000000000000000000000000000000000000000000000082169050919050565b6116bd81611688565b82525050565b60006060820190506116d860008301866116b4565b6116e5602083018561153a565b6116f2604083018461153a565b949350505050565b60008160601b9050919050565b6000611712826116fa565b9050919050565b600061172482611707565b9050919050565b61173c6117378261117d565b611719565b82525050565b600061174e828461172b565b6014820191508190509291505056fea2646970667358221220b566f06a195184b481a66f3d68791ac32514b9059415f8078b24700c2a1f5e4164736f6c63430008130033";

type PrivateSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateSwap__factory extends ContractFactory {
  constructor(...args: PrivateSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _tokenA: AddressLike,
    _tokenB: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_tokenA, _tokenB, overrides || {});
  }
  override deploy(
    _tokenA: AddressLike,
    _tokenB: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_tokenA, _tokenB, overrides || {}) as Promise<
      PrivateSwap & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PrivateSwap__factory {
    return super.connect(runner) as PrivateSwap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateSwapInterface {
    return new Interface(_abi) as PrivateSwapInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PrivateSwap {
    return new Contract(address, _abi, runner) as unknown as PrivateSwap;
  }
}
